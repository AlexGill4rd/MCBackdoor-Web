{"ast":null,"code":"import { useMemo } from 'react';\n\nvar setRef = function setRef(ref, element) {\n  if (typeof ref === 'function') {\n    ref(element);\n  } else if (ref) {\n    ref.current = element;\n  }\n};\n\nvar useCombinedRef = function useCombinedRef(refA, refB) {\n  return useMemo(function () {\n    if (!refA) return refB;\n    if (!refB) return refA;\n    return function (element) {\n      setRef(refA, element);\n      setRef(refB, element);\n    };\n  }, [refA, refB]);\n};\n\nexport { useCombinedRef };","map":{"version":3,"names":["useMemo","setRef","ref","element","current","useCombinedRef","refA","refB"],"sources":["E:/Sites/virus-v5-web/Client/node_modules/@szhsin/react-menu/dist/es/hooks/useCombinedRef.js"],"sourcesContent":["import { useMemo } from 'react';\n\nvar setRef = function setRef(ref, element) {\n  if (typeof ref === 'function') {\n    ref(element);\n  } else if (ref) {\n    ref.current = element;\n  }\n};\n\nvar useCombinedRef = function useCombinedRef(refA, refB) {\n  return useMemo(function () {\n    if (!refA) return refB;\n    if (!refB) return refA;\n    return function (element) {\n      setRef(refA, element);\n      setRef(refB, element);\n    };\n  }, [refA, refB]);\n};\n\nexport { useCombinedRef };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;EACzC,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACC,OAAD,CAAH;EACD,CAFD,MAEO,IAAID,GAAJ,EAAS;IACdA,GAAG,CAACE,OAAJ,GAAcD,OAAd;EACD;AACF,CAND;;AAQA,IAAIE,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EACvD,OAAOP,OAAO,CAAC,YAAY;IACzB,IAAI,CAACM,IAAL,EAAW,OAAOC,IAAP;IACX,IAAI,CAACA,IAAL,EAAW,OAAOD,IAAP;IACX,OAAO,UAAUH,OAAV,EAAmB;MACxBF,MAAM,CAACK,IAAD,EAAOH,OAAP,CAAN;MACAF,MAAM,CAACM,IAAD,EAAOJ,OAAP,CAAN;IACD,CAHD;EAID,CAPa,EAOX,CAACG,IAAD,EAAOC,IAAP,CAPW,CAAd;AAQD,CATD;;AAWA,SAASF,cAAT"},"metadata":{},"sourceType":"module"}