{"ast":null,"code":"const itemsById = require('./data/itemsById.json');\n\nconst itemsByName = require('./data/itemsByName.json');\n\nconst format = {\n  num: /^\\d+$/,\n  incompleteId: /^\\d+:$/,\n  id: /^\\d+:\\d+$/\n};\n\nconst isNumeric = key => typeof key === 'number' || format.num.test(key);\n\nconst isIncompleteId = key => format.incompleteId.test(key);\n\nconst isId = key => format.id.test(key);\n\nconst get = key => {\n  if (isNumeric(key)) {\n    key = `${key}:0`;\n    return itemsById[key];\n  }\n\n  if (isId(key)) {\n    return itemsById[key];\n  }\n\n  return itemsByName[key.toLowerCase()];\n};\n\nconst getAll = function () {\n  let {\n    by = 'id'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (by === 'name') {\n    return itemsByName;\n  }\n\n  return itemsById;\n};\n\nconst filterAndMapKeysById = (key, keyFormat) => {\n  const keys = Object.keys(itemsById).filter(k => keyFormat.test(k));\n  return keys.map(key => itemsById[key]);\n};\n\nconst findByNumber = key => {\n  const keyFormat = new RegExp(`^${key}:`);\n  return filterAndMapKeysById(key, keyFormat);\n};\n\nconst findById = key => {\n  const keyFormat = new RegExp(`^${key}`);\n  return filterAndMapKeysById(key, keyFormat);\n};\n\nconst findByName = key => {\n  const keyFormat = new RegExp(`${key}`);\n  const keys = Object.keys(itemsByName).filter(k => keyFormat.test(k));\n  return keys.map(key => itemsByName[key]);\n};\n\nconst find = key => {\n  if (isNumeric(key)) {\n    return findByNumber(key);\n  }\n\n  if (isIncompleteId(key) || isId(key)) {\n    return findById(key);\n  }\n\n  return findByName(key);\n};\n\nmodule.exports = {\n  get,\n  getAll,\n  find\n};","map":{"version":3,"names":["itemsById","require","itemsByName","format","num","incompleteId","id","isNumeric","key","test","isIncompleteId","isId","get","toLowerCase","getAll","by","filterAndMapKeysById","keyFormat","keys","Object","filter","k","map","findByNumber","RegExp","findById","findByName","find","module","exports"],"sources":["E:/Sites/virusv4/Client/node_modules/minecraft-items/index.js"],"sourcesContent":["const itemsById = require('./data/itemsById.json')\nconst itemsByName = require('./data/itemsByName.json')\n\nconst format = {\n  num: /^\\d+$/,\n  incompleteId: /^\\d+:$/,\n  id: /^\\d+:\\d+$/\n}\nconst isNumeric = key => typeof key === 'number' || format.num.test(key)\nconst isIncompleteId = key => format.incompleteId.test(key)\nconst isId = key => format.id.test(key)\n\nconst get = (key) => {\n  if (isNumeric(key)) {\n    key = `${key}:0`\n    return itemsById[key]\n  }\n\n  if (isId(key)) {\n    return itemsById[key]\n  }\n\n  return itemsByName[key.toLowerCase()]\n}\n\nconst getAll = ({ by = 'id' } = {}) => {\n  if (by === 'name') {\n    return itemsByName\n  }\n  return itemsById\n}\n\nconst filterAndMapKeysById = (key, keyFormat) => {\n  const keys = Object.keys(itemsById).filter(k => keyFormat.test(k))\n  return keys.map(key => itemsById[key])\n}\n\nconst findByNumber = (key) => {\n  const keyFormat = new RegExp(`^${key}:`)\n  return filterAndMapKeysById(key, keyFormat)\n}\n\nconst findById = (key) => {\n  const keyFormat = new RegExp(`^${key}`)\n  return filterAndMapKeysById(key, keyFormat)\n}\n\nconst findByName = (key) => {\n  const keyFormat = new RegExp(`${key}`)\n  const keys = Object.keys(itemsByName).filter(k => keyFormat.test(k))\n  return keys.map(key => itemsByName[key])\n}\n\nconst find = (key) => {\n  if (isNumeric(key)) {\n    return findByNumber(key)\n  }\n\n  if (isIncompleteId(key) || isId(key)) {\n    return findById(key)\n  }\n\n  return findByName(key)\n}\n\nmodule.exports = {\n  get,\n  getAll,\n  find\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}