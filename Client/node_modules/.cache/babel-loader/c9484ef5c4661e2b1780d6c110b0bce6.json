{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  const {\n    BackdropComponent,\n    BackdropProps,\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    theme,\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({\n      role: \"presentation\"\n    }, rootProps, !isHostComponent(Root) && {\n      as: component,\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\n      theme\n    }, other, {\n      ref: handleRef,\n      onKeyDown: handleKeyDown,\n      className: clsx(classes.root, rootProps.className, className),\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\n        \"aria-hidden\": true,\n        open: open,\n        onClick: handleBackdropClick\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the backdrop element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","isHostComponent","Portal","ModalManager","ariaHidden","TrapFocus","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","BackdropComponent","BackdropProps","classesProp","className","closeAfterTransition","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","theme","onTransitionEnter","onTransitionExited","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","role","as","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","string","bool","shape","oneOfType","func"],"sources":["E:/Sites/virusv4/CLient/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  const {\n    BackdropComponent,\n    BackdropProps,\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    theme,\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({\n      role: \"presentation\"\n    }, rootProps, !isHostComponent(Root) && {\n      as: component,\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\n      theme\n    }, other, {\n      ref: handleRef,\n      onKeyDown: handleKeyDown,\n      className: clsx(classes.root, rootProps.className, className),\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\n        \"aria-hidden\": true,\n        open: open,\n        onClick: handleBackdropClick\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the backdrop element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}