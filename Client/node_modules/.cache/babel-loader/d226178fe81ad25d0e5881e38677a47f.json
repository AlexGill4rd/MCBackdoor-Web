{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\serverpage\\\\components\\\\ServerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport IpAddress from '../../../IpAddress';\nimport ServerTab from './ServerTab';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction ServerList() {\n  _s();\n\n  const [servers, setServers] = useState([]);\n  useEffect(() => {\n    socket.emit(\"client:active-servers\", \"active\");\n    socket.on(`server:active-server`, server => {\n      console.log(servers);\n      setServers(servers.list.concat(server));\n      console.log(servers);\n      console.log(server);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: servers.map(server => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ServerTab, {\n        serverImage: server.Image,\n        serverName: server.Name,\n        serverState: server.State,\n        serverID: server.id\n      }, server.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false))\n  }, void 0, false);\n}\n\n_s(ServerList, \"xfSG+wryFcgzvchjWZabd3QMWJw=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["useEffect","useState","IpAddress","ServerTab","socketIOClient","ip","socket","getIP","ServerList","servers","setServers","emit","on","server","console","log","list","concat","map","Image","Name","State","id"],"sources":["E:/Sites/virusv4/Client/src/pages/serverpage/components/ServerList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport IpAddress from '../../../IpAddress';\r\nimport ServerTab from './ServerTab';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction ServerList(){\r\n    const [servers, setServers] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"client:active-servers\", \"active\")\r\n        socket.on(`server:active-server`, (server) => {\r\n            console.log(servers)\r\n            setServers(servers.list.concat(server));\r\n            console.log(servers)\r\n            console.log(server)\r\n        })\r\n    }, []);\r\n    return <>{\r\n        servers.map((server: {Image: string, Name: string, State: boolean, id: number}) => <>{\r\n            <ServerTab \r\n                serverImage={server.Image} \r\n                serverName={server.Name} \r\n                serverState={server.State} \r\n                serverID={server.id} \r\n                key={server.id}\r\n            />\r\n        }</>)\r\n      }</>\r\n}\r\nexport default ServerList;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,IAAIC,EAAE,GAAG,IAAIH,SAAJ,EAAT;AACA,IAAII,MAAM,GAAGF,cAAc,CAAE,UAASC,EAAE,CAACE,KAAH,EAAW,OAAtB,CAA3B;;AAEA,SAASC,UAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAM,EAAN,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZM,MAAM,CAACK,IAAP,CAAY,uBAAZ,EAAqC,QAArC;IACAL,MAAM,CAACM,EAAP,CAAW,sBAAX,EAAmCC,MAAD,IAAY;MAC1CC,OAAO,CAACC,GAAR,CAAYN,OAAZ;MACAC,UAAU,CAACD,OAAO,CAACO,IAAR,CAAaC,MAAb,CAAoBJ,MAApB,CAAD,CAAV;MACAC,OAAO,CAACC,GAAR,CAAYN,OAAZ;MACAK,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACH,CALD;EAMH,CARQ,EAQN,EARM,CAAT;EASA,oBAAO;IAAA,UACHJ,OAAO,CAACS,GAAR,CAAaL,MAAD,iBAAuE;MAAA,uBAC/E,QAAC,SAAD;QACI,WAAW,EAAEA,MAAM,CAACM,KADxB;QAEI,UAAU,EAAEN,MAAM,CAACO,IAFvB;QAGI,WAAW,EAAEP,MAAM,CAACQ,KAHxB;QAII,QAAQ,EAAER,MAAM,CAACS;MAJrB,GAKST,MAAM,CAACS,EALhB;QAAA;QAAA;QAAA;MAAA;IAD+E,iBAAnF;EADG,iBAAP;AAWH;;GAvBQd,U;;KAAAA,U;AAwBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}