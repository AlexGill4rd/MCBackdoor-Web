{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\servercontrollers\\\\playercontroller\\\\features\\\\panels\\\\SpelerDataPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport './PanelStyle.scss';\nimport './SpelerDataPanelStyle.scss';\nimport { useEffect, useState } from 'react';\nimport { socket } from '../../../../../socket/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SpelerDataPanel(props) {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  function crashPlayer() {\n    var data = {\n      Player: props.player,\n      Feature: \"data\"\n    };\n    socket.emit(\"client:features-change\", data);\n  }\n\n  useEffect(function listenMessages() {\n    socket.on(`server:features-change-message`, data => {\n      if (data.includes(\"fout\")) setError(true);else setError(false);\n      setInfoMessage(data);\n    });\n  }, []);\n\n  function setInfoMessage(data) {\n    setMessage(data);\n    setTimeout(function () {\n      if (message !== data) setMessage(\"\");\n    }, 5000);\n  }\n\n  useEffect(function requestPlayerData() {\n    socket.emit(\"client:player-data\", props.server.Address);\n  }, []);\n  useEffect(function playerDataUpdate() {\n    socket.on(`server:features-change-message`, data => {\n      if (data.includes(\"fout\")) setError(true);else setError(false);\n      setInfoMessage(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [\"Speler Data Panel - \", props.player.Displayname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spelerdata-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spelerdata-buttons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        style: {\n          color: 'red'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        style: {\n          color: \"lime\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SpelerDataPanel, \"xb25Wd8SDh/Bx3pR8safZCN3Q1Q=\");\n\n_c = SpelerDataPanel;\nexport default SpelerDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpelerDataPanel\");","map":{"version":3,"names":["useEffect","useState","socket","SpelerDataPanel","props","error","setError","message","setMessage","crashPlayer","data","Player","player","Feature","emit","listenMessages","on","includes","setInfoMessage","setTimeout","requestPlayerData","server","Address","playerDataUpdate","Displayname","color"],"sources":["E:/Sites/virusv4/Client/src/pages/servercontrollers/playercontroller/features/panels/SpelerDataPanel.tsx"],"sourcesContent":["import { Tooltip } from '@mui/material';\r\nimport './PanelStyle.scss';\r\n\r\nimport './SpelerDataPanelStyle.scss';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { socket } from '../../../../../socket/socket';\r\n\r\nfunction SpelerDataPanel(props: {player: any, server: any;}){\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [message, setMessage] = useState<string>(\"\");\r\n\r\n    function crashPlayer(){\r\n        var data = {\r\n            Player: props.player,\r\n            Feature: \"data\"\r\n        }\r\n        socket.emit(\"client:features-change\", data);\r\n    }\r\n    useEffect(function listenMessages(){\r\n        socket.on(`server:features-change-message`, data => {\r\n            if (data.includes(\"fout\"))setError(true);\r\n            else setError(false);\r\n            setInfoMessage(data);\r\n        })\r\n    }, []);\r\n    function setInfoMessage(data: string){\r\n        setMessage(data);\r\n        setTimeout(function(){\r\n            if (message !== data)\r\n                setMessage(\"\");\r\n        }, 5000)\r\n    }\r\n    useEffect(function requestPlayerData(){\r\n        socket.emit(\"client:player-data\", props.server.Address);\r\n    }, []);\r\n    useEffect(function playerDataUpdate(){\r\n        socket.on(`server:features-change-message`, data => {\r\n            if (data.includes(\"fout\"))setError(true);\r\n            else setError(false);\r\n            setInfoMessage(data);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className='panel-header'>\r\n                Speler Data Panel - {props.player.Displayname}\r\n            </div>\r\n            <div className='panel-line'></div>\r\n            <div className='spelerdata-container'>\r\n                <div className='spelerdata-buttons'>\r\n\r\n                </div>\r\n                {error ? \r\n                <div className='message' style={{color: 'red'}}>{message}</div> :  \r\n                 <div className='message' style={{color: \"lime\"}}>{message}</div>\r\n                 }\r\n                \r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default SpelerDataPanel;"],"mappings":";;;AACA,OAAO,mBAAP;AAEA,OAAO,6BAAP;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,8BAAvB;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA4D;EAAA;;EACxD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,KAAV,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAS,EAAT,CAAtC;;EAEA,SAASQ,WAAT,GAAsB;IAClB,IAAIC,IAAI,GAAG;MACPC,MAAM,EAAEP,KAAK,CAACQ,MADP;MAEPC,OAAO,EAAE;IAFF,CAAX;IAIAX,MAAM,CAACY,IAAP,CAAY,wBAAZ,EAAsCJ,IAAtC;EACH;;EACDV,SAAS,CAAC,SAASe,cAAT,GAAyB;IAC/Bb,MAAM,CAACc,EAAP,CAAW,gCAAX,EAA4CN,IAAI,IAAI;MAChD,IAAIA,IAAI,CAACO,QAAL,CAAc,MAAd,CAAJ,EAA0BX,QAAQ,CAAC,IAAD,CAAR,CAA1B,KACKA,QAAQ,CAAC,KAAD,CAAR;MACLY,cAAc,CAACR,IAAD,CAAd;IACH,CAJD;EAKH,CANQ,EAMN,EANM,CAAT;;EAOA,SAASQ,cAAT,CAAwBR,IAAxB,EAAqC;IACjCF,UAAU,CAACE,IAAD,CAAV;IACAS,UAAU,CAAC,YAAU;MACjB,IAAIZ,OAAO,KAAKG,IAAhB,EACIF,UAAU,CAAC,EAAD,CAAV;IACP,CAHS,EAGP,IAHO,CAAV;EAIH;;EACDR,SAAS,CAAC,SAASoB,iBAAT,GAA4B;IAClClB,MAAM,CAACY,IAAP,CAAY,oBAAZ,EAAkCV,KAAK,CAACiB,MAAN,CAAaC,OAA/C;EACH,CAFQ,EAEN,EAFM,CAAT;EAGAtB,SAAS,CAAC,SAASuB,gBAAT,GAA2B;IACjCrB,MAAM,CAACc,EAAP,CAAW,gCAAX,EAA4CN,IAAI,IAAI;MAChD,IAAIA,IAAI,CAACO,QAAL,CAAc,MAAd,CAAJ,EAA0BX,QAAQ,CAAC,IAAD,CAAR,CAA1B,KACKA,QAAQ,CAAC,KAAD,CAAR;MACLY,cAAc,CAACR,IAAD,CAAd;IACH,CAJD;EAKH,CANQ,EAMN,EANM,CAAT;EAOA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,mCACyBN,KAAK,CAACQ,MAAN,CAAaY,WADtC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADJ,EAIKnB,KAAK,gBACN;QAAK,SAAS,EAAC,SAAf;QAAyB,KAAK,EAAE;UAACoB,KAAK,EAAE;QAAR,CAAhC;QAAA,UAAiDlB;MAAjD;QAAA;QAAA;QAAA;MAAA,QADM,gBAEL;QAAK,SAAS,EAAC,SAAf;QAAyB,KAAK,EAAE;UAACkB,KAAK,EAAE;QAAR,CAAhC;QAAA,UAAkDlB;MAAlD;QAAA;QAAA;QAAA;MAAA,QANL;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA,gBADJ;AAmBH;;GAtDQJ,e;;KAAAA,e;AAuDT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}