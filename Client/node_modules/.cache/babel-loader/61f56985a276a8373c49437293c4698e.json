{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\servercontrollers\\\\playercontroller\\\\components\\\\PlayerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport IpAddress from \"../../../../IpAddress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction PlayerList(props) {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  useEffect(function loadPlayers() {\n    socket.emit(\"client:server-player-list\", props.serverid);\n  }, []);\n  useEffect(function updatePlayers() {\n    socket.on(`server:mcserver-player-list`, data => {\n      setPlayers(data);\n    });\n  }, []);\n  return players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {}, player.UUID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n}\n\n_s(PlayerList, \"wE/xxOFGBmPB288mpRSP1rtoapk=\");\n\n_c = PlayerList;\nexport default PlayerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["useEffect","useState","socketIOClient","IpAddress","ip","socket","getIP","PlayerList","props","players","setPlayers","loadPlayers","emit","serverid","updatePlayers","on","data","map","player","UUID"],"sources":["E:/Sites/virusv4/Client/src/pages/servercontrollers/playercontroller/components/PlayerList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Player from './Player';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport IpAddress from \"../../../../IpAddress\";\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction PlayerList(props: {serverid: any, onPlayerClick: any, selectedPlayer: any;}){\r\n    const [players, setPlayers] = useState<any>([]);\r\n\r\n    useEffect(function loadPlayers(){\r\n        socket.emit(\"client:server-player-list\", props.serverid)\r\n    }, []);\r\n    useEffect(function updatePlayers(){\r\n        socket.on(`server:mcserver-player-list`, data => {\r\n            setPlayers(data);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        players.map((player: { UUID: any; playerName: any; }) => \r\n        <div key={player.UUID}>{\r\n            \r\n        }</div>)\r\n    );\r\n}\r\nexport default PlayerList;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AACA,IAAIC,EAAE,GAAG,IAAID,SAAJ,EAAT;AACA,IAAIE,MAAM,GAAGH,cAAc,CAAE,UAASE,EAAE,CAACE,KAAH,EAAW,OAAtB,CAA3B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAAqF;EAAA;;EACjF,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAM,EAAN,CAAtC;EAEAD,SAAS,CAAC,SAASW,WAAT,GAAsB;IAC5BN,MAAM,CAACO,IAAP,CAAY,2BAAZ,EAAyCJ,KAAK,CAACK,QAA/C;EACH,CAFQ,EAEN,EAFM,CAAT;EAGAb,SAAS,CAAC,SAASc,aAAT,GAAwB;IAC9BT,MAAM,CAACU,EAAP,CAAW,6BAAX,EAAyCC,IAAI,IAAI;MAC7CN,UAAU,CAACM,IAAD,CAAV;IACH,CAFD;EAGH,CAJQ,EAIN,EAJM,CAAT;EAMA,OACIP,OAAO,CAACQ,GAAR,CAAaC,MAAD,iBACZ,mBAAUA,MAAM,CAACC,IAAjB;IAAA;IAAA;IAAA;EAAA,QADA,CADJ;AAMH;;GAlBQZ,U;;KAAAA,U;AAmBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}