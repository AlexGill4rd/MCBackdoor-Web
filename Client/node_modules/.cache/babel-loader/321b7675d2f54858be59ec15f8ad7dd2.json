{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\servercontrollers\\\\playercontroller\\\\features\\\\panels\\\\WhitelistPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport { Tooltip } from '@mui/material';\nimport './OperatorPanelStyle.scss';\nimport './KickPanelStyle.scss';\nimport socketIOClient from \"socket.io-client\";\nimport IpAddress from '../../../../../IpAddress';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction WhitelistPanel(props) {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [whitelisted, setWhitelisted] = useState(false);\n\n  function kickPlayer() {\n    var data = {\n      Player: props.player,\n      Feature: \"whitelist\",\n      Status: whitelisted\n    };\n    socket.emit(\"client:features-change\", data);\n  }\n\n  useEffect(function listenMessages() {\n    socket.on(`server:features-change-message`, data => {\n      if (data.includes(\"fout\")) setError(true);else setError(false);\n      setInfoMessage(data);\n    });\n  }, []);\n\n  function setInfoMessage(data) {\n    setMessage(data);\n    setTimeout(function () {\n      if (message !== data) setMessage(\"\");\n    }, 5000);\n  }\n\n  function handlePlayerWhitelist(state) {\n    setWhitelisted(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [\"Whitelist Panel - \", props.player.Displayname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kickpanel-container\",\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Whitelist de speler\",\n        onClick: () => handlePlayerWhitelist(true),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kickpanel-form-button\",\n          children: \"Whitelist Speler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Un Whitelist de speler\",\n        onClick: () => handlePlayerWhitelist(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kickpanel-form-button\",\n          children: \"UnWhitelist Speler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        style: {\n          color: 'red'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        style: {\n          color: \"lime\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WhitelistPanel, \"hiwoP0327N3zfY0Ms3Urr1Bo5DY=\");\n\n_c = WhitelistPanel;\nexport default WhitelistPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhitelistPanel\");","map":{"version":3,"names":["Tooltip","socketIOClient","IpAddress","useEffect","useState","ip","socket","getIP","WhitelistPanel","props","error","setError","message","setMessage","whitelisted","setWhitelisted","kickPlayer","data","Player","player","Feature","Status","emit","listenMessages","on","includes","setInfoMessage","setTimeout","handlePlayerWhitelist","state","Displayname","color"],"sources":["E:/Sites/virusv4/Client/src/pages/servercontrollers/playercontroller/features/panels/WhitelistPanel.tsx"],"sourcesContent":["import { Tooltip } from '@mui/material';\r\nimport './OperatorPanelStyle.scss';\r\nimport './KickPanelStyle.scss';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport IpAddress from '../../../../../IpAddress';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction WhitelistPanel(props: {player: any;}){\r\n    const [error, setError] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    \r\n    const [whitelisted, setWhitelisted] = useState<boolean>(false);\r\n\r\n    function kickPlayer(){\r\n        var data = {\r\n            Player: props.player,\r\n            Feature: \"whitelist\",\r\n            Status: whitelisted\r\n        }\r\n        socket.emit(\"client:features-change\", data);\r\n    }\r\n    useEffect(function listenMessages(){\r\n        socket.on(`server:features-change-message`, data => {\r\n            if (data.includes(\"fout\"))setError(true);\r\n            else setError(false);\r\n            setInfoMessage(data);\r\n        })\r\n    }, []);\r\n    function setInfoMessage(data: string){\r\n        setMessage(data);\r\n        setTimeout(function(){\r\n            if (message !== data)\r\n                setMessage(\"\");\r\n        }, 5000)\r\n    }\r\n    function handlePlayerWhitelist(state: boolean) {\r\n        setWhitelisted(state);\r\n    }\r\n    return (\r\n        <>\r\n            <div className='panel-header'>\r\n                Whitelist Panel - {props.player.Displayname}\r\n            </div>\r\n            <div className='panel-line'></div>\r\n            <div className='kickpanel-container'>\r\n                <Tooltip title='Whitelist de speler' onClick={() => handlePlayerWhitelist(true)}>\r\n                    <div className='kickpanel-form-button'>Whitelist Speler</div>\r\n                </Tooltip>\r\n                <Tooltip title='Un Whitelist de speler' onClick={() => handlePlayerWhitelist(false)}>\r\n                    <div className='kickpanel-form-button'>UnWhitelist Speler</div>\r\n                </Tooltip>\r\n                {error ? \r\n                <div className='message' style={{color: 'red'}}>{message}</div> :  \r\n                 <div className='message' style={{color: \"lime\"}}>{message}</div>\r\n                }\r\n                \r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default WhitelistPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}