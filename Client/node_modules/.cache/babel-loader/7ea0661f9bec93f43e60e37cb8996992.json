{"ast":null,"code":"'use strict';\n\nvar fs = require('file-system');\n\nvar polyfills = {}; // write an image to file\n\npolyfills.writeFile = function (path, dataBuffer, callback) {\n  fs.writeFile(path, dataBuffer, function (err) {\n    if (err) {\n      throw err;\n    }\n\n    callback();\n  });\n}; // return a string containing the data URI of current resultant canvas.\n\n\npolyfills.toDataURL = function (options, callback) {\n  var canvas = options.canvas;\n  var imageFormat = options.imageFormat;\n  var quality = options.quality;\n  var bufsize = options.bufsize;\n\n  if (imageFormat === 'image/jpeg') {\n    // JPEG quality number support 1 ~ 100\n    canvas.toDataURL(imageFormat, {\n      quality: quality,\n      bufsize: bufsize\n    }, function (err, str) {\n      if (err) {\n        throw err;\n      }\n\n      callback(str);\n    });\n  } else {\n    // PNG doesn't support quality setting\n    canvas.toDataURL(imageFormat, function (err, str) {\n      if (err) {\n        throw err;\n      }\n\n      callback(str);\n    });\n  }\n};\n\nmodule.exports = polyfills;","map":{"version":3,"names":["fs","require","polyfills","writeFile","path","dataBuffer","callback","err","toDataURL","options","canvas","imageFormat","quality","bufsize","str","module","exports"],"sources":["E:/Sites/virusv4/Client/node_modules/image-clipper/lib/polyfills.js"],"sourcesContent":["'use strict'\n\nvar fs = require('file-system');\nvar polyfills = {}\n\n// write an image to file\npolyfills.writeFile = function(path, dataBuffer, callback) {\n  fs.writeFile(path, dataBuffer, function(err) {\n    if (err) {\n      throw err\n    }\n\n    callback()\n  })\n}\n\n// return a string containing the data URI of current resultant canvas.\npolyfills.toDataURL = function(options, callback) {\n  var canvas = options.canvas\n  var imageFormat = options.imageFormat\n  var quality = options.quality\n  var bufsize = options.bufsize\n\n  if (imageFormat === 'image/jpeg') {\n    // JPEG quality number support 1 ~ 100\n    canvas.toDataURL(imageFormat, {quality: quality, bufsize: bufsize}, function(err, str) {\n      if (err) {\n        throw err\n      }\n\n      callback(str)\n    })\n\n  } else {\n    // PNG doesn't support quality setting\n    canvas.toDataURL(imageFormat, function(err, str) {\n      if (err) {\n        throw err\n      }\n\n      callback(str)\n    })\n  }\n}\n\nmodule.exports = polyfills\n"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,SAAS,GAAG,EAAhB,C,CAEA;;AACAA,SAAS,CAACC,SAAV,GAAsB,UAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqC;EACzDN,EAAE,CAACG,SAAH,CAAaC,IAAb,EAAmBC,UAAnB,EAA+B,UAASE,GAAT,EAAc;IAC3C,IAAIA,GAAJ,EAAS;MACP,MAAMA,GAAN;IACD;;IAEDD,QAAQ;EACT,CAND;AAOD,CARD,C,CAUA;;;AACAJ,SAAS,CAACM,SAAV,GAAsB,UAASC,OAAT,EAAkBH,QAAlB,EAA4B;EAChD,IAAII,MAAM,GAAGD,OAAO,CAACC,MAArB;EACA,IAAIC,WAAW,GAAGF,OAAO,CAACE,WAA1B;EACA,IAAIC,OAAO,GAAGH,OAAO,CAACG,OAAtB;EACA,IAAIC,OAAO,GAAGJ,OAAO,CAACI,OAAtB;;EAEA,IAAIF,WAAW,KAAK,YAApB,EAAkC;IAChC;IACAD,MAAM,CAACF,SAAP,CAAiBG,WAAjB,EAA8B;MAACC,OAAO,EAAEA,OAAV;MAAmBC,OAAO,EAAEA;IAA5B,CAA9B,EAAoE,UAASN,GAAT,EAAcO,GAAd,EAAmB;MACrF,IAAIP,GAAJ,EAAS;QACP,MAAMA,GAAN;MACD;;MAEDD,QAAQ,CAACQ,GAAD,CAAR;IACD,CAND;EAQD,CAVD,MAUO;IACL;IACAJ,MAAM,CAACF,SAAP,CAAiBG,WAAjB,EAA8B,UAASJ,GAAT,EAAcO,GAAd,EAAmB;MAC/C,IAAIP,GAAJ,EAAS;QACP,MAAMA,GAAN;MACD;;MAEDD,QAAQ,CAACQ,GAAD,CAAR;IACD,CAND;EAOD;AACF,CA1BD;;AA4BAC,MAAM,CAACC,OAAP,GAAiBd,SAAjB"},"metadata":{},"sourceType":"script"}