{"ast":null,"code":"import { useState, useRef, useCallback } from 'react';\nimport { HoverActionTypes } from '../utils/constants.js';\nimport { indexOfNode } from '../utils/utils.js';\n\nvar useItems = function useItems(menuRef) {\n  var _useState = useState(),\n      hoverItem = _useState[0],\n      setHoverItem = _useState[1];\n\n  var stateRef = useRef({\n    items: [],\n    hoverIndex: -1,\n    sorted: false\n  });\n  var mutableState = stateRef.current;\n  var updateItems = useCallback(function (item, isMounted) {\n    var items = mutableState.items;\n\n    if (!item) {\n      mutableState.items = [];\n    } else if (isMounted) {\n      items.push(item);\n    } else {\n      var index = items.indexOf(item);\n      if (index > -1) items.splice(index, 1);\n    }\n\n    mutableState.hoverIndex = -1;\n    mutableState.sorted = false;\n  }, [mutableState]);\n  var dispatch = useCallback(function (actionType, item, nextIndex) {\n    var items = mutableState.items,\n        hoverIndex = mutableState.hoverIndex;\n\n    var sortItems = function sortItems() {\n      if (mutableState.sorted) return;\n      var orderedNodes = menuRef.current.querySelectorAll('.szh-menu__item');\n      items.sort(function (a, b) {\n        return indexOfNode(orderedNodes, a) - indexOfNode(orderedNodes, b);\n      });\n      mutableState.sorted = true;\n    };\n\n    var index = -1,\n        newItem = undefined;\n\n    switch (actionType) {\n      case HoverActionTypes.RESET:\n        break;\n\n      case HoverActionTypes.SET:\n        newItem = item;\n        break;\n\n      case HoverActionTypes.UNSET:\n        newItem = function newItem(prevItem) {\n          return prevItem === item ? undefined : prevItem;\n        };\n\n        break;\n\n      case HoverActionTypes.FIRST:\n        sortItems();\n        index = 0;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.LAST:\n        sortItems();\n        index = items.length - 1;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.SET_INDEX:\n        sortItems();\n        index = nextIndex;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.INCREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index++;\n        if (index >= items.length) index = 0;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.DECREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index--;\n        if (index < 0) index = items.length - 1;\n        newItem = items[index];\n        break;\n\n      default:\n        if (process.env.NODE_ENV !== 'production') throw new Error(\"[React-Menu] Unknown hover action type: \" + actionType);\n    }\n\n    if (!newItem) index = -1;\n    setHoverItem(newItem);\n    mutableState.hoverIndex = index;\n  }, [menuRef, mutableState]);\n  return {\n    hoverItem: hoverItem,\n    dispatch: dispatch,\n    updateItems: updateItems\n  };\n};\n\nexport { useItems };","map":{"version":3,"names":["useState","useRef","useCallback","HoverActionTypes","indexOfNode","useItems","menuRef","_useState","hoverItem","setHoverItem","stateRef","items","hoverIndex","sorted","mutableState","current","updateItems","item","isMounted","push","index","indexOf","splice","dispatch","actionType","nextIndex","sortItems","orderedNodes","querySelectorAll","sort","a","b","newItem","undefined","RESET","SET","UNSET","prevItem","FIRST","LAST","length","SET_INDEX","INCREASE","DECREASE","process","env","NODE_ENV","Error"],"sources":["E:/Sites/virus-v5-web/Client/node_modules/@szhsin/react-menu/dist/es/hooks/useItems.js"],"sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport { HoverActionTypes } from '../utils/constants.js';\nimport { indexOfNode } from '../utils/utils.js';\n\nvar useItems = function useItems(menuRef) {\n  var _useState = useState(),\n      hoverItem = _useState[0],\n      setHoverItem = _useState[1];\n\n  var stateRef = useRef({\n    items: [],\n    hoverIndex: -1,\n    sorted: false\n  });\n  var mutableState = stateRef.current;\n  var updateItems = useCallback(function (item, isMounted) {\n    var items = mutableState.items;\n\n    if (!item) {\n      mutableState.items = [];\n    } else if (isMounted) {\n      items.push(item);\n    } else {\n      var index = items.indexOf(item);\n      if (index > -1) items.splice(index, 1);\n    }\n\n    mutableState.hoverIndex = -1;\n    mutableState.sorted = false;\n  }, [mutableState]);\n  var dispatch = useCallback(function (actionType, item, nextIndex) {\n    var items = mutableState.items,\n        hoverIndex = mutableState.hoverIndex;\n\n    var sortItems = function sortItems() {\n      if (mutableState.sorted) return;\n      var orderedNodes = menuRef.current.querySelectorAll('.szh-menu__item');\n      items.sort(function (a, b) {\n        return indexOfNode(orderedNodes, a) - indexOfNode(orderedNodes, b);\n      });\n      mutableState.sorted = true;\n    };\n\n    var index = -1,\n        newItem = undefined;\n\n    switch (actionType) {\n      case HoverActionTypes.RESET:\n        break;\n\n      case HoverActionTypes.SET:\n        newItem = item;\n        break;\n\n      case HoverActionTypes.UNSET:\n        newItem = function newItem(prevItem) {\n          return prevItem === item ? undefined : prevItem;\n        };\n\n        break;\n\n      case HoverActionTypes.FIRST:\n        sortItems();\n        index = 0;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.LAST:\n        sortItems();\n        index = items.length - 1;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.SET_INDEX:\n        sortItems();\n        index = nextIndex;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.INCREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index++;\n        if (index >= items.length) index = 0;\n        newItem = items[index];\n        break;\n\n      case HoverActionTypes.DECREASE:\n        sortItems();\n        index = hoverIndex;\n        if (index < 0) index = items.indexOf(item);\n        index--;\n        if (index < 0) index = items.length - 1;\n        newItem = items[index];\n        break;\n\n      default:\n        if (process.env.NODE_ENV !== 'production') throw new Error(\"[React-Menu] Unknown hover action type: \" + actionType);\n    }\n\n    if (!newItem) index = -1;\n    setHoverItem(newItem);\n    mutableState.hoverIndex = index;\n  }, [menuRef, mutableState]);\n  return {\n    hoverItem: hoverItem,\n    dispatch: dispatch,\n    updateItems: updateItems\n  };\n};\n\nexport { useItems };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;EACxC,IAAIC,SAAS,GAAGP,QAAQ,EAAxB;EAAA,IACIQ,SAAS,GAAGD,SAAS,CAAC,CAAD,CADzB;EAAA,IAEIE,YAAY,GAAGF,SAAS,CAAC,CAAD,CAF5B;;EAIA,IAAIG,QAAQ,GAAGT,MAAM,CAAC;IACpBU,KAAK,EAAE,EADa;IAEpBC,UAAU,EAAE,CAAC,CAFO;IAGpBC,MAAM,EAAE;EAHY,CAAD,CAArB;EAKA,IAAIC,YAAY,GAAGJ,QAAQ,CAACK,OAA5B;EACA,IAAIC,WAAW,GAAGd,WAAW,CAAC,UAAUe,IAAV,EAAgBC,SAAhB,EAA2B;IACvD,IAAIP,KAAK,GAAGG,YAAY,CAACH,KAAzB;;IAEA,IAAI,CAACM,IAAL,EAAW;MACTH,YAAY,CAACH,KAAb,GAAqB,EAArB;IACD,CAFD,MAEO,IAAIO,SAAJ,EAAe;MACpBP,KAAK,CAACQ,IAAN,CAAWF,IAAX;IACD,CAFM,MAEA;MACL,IAAIG,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcJ,IAAd,CAAZ;MACA,IAAIG,KAAK,GAAG,CAAC,CAAb,EAAgBT,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAoB,CAApB;IACjB;;IAEDN,YAAY,CAACF,UAAb,GAA0B,CAAC,CAA3B;IACAE,YAAY,CAACD,MAAb,GAAsB,KAAtB;EACD,CAd4B,EAc1B,CAACC,YAAD,CAd0B,CAA7B;EAeA,IAAIS,QAAQ,GAAGrB,WAAW,CAAC,UAAUsB,UAAV,EAAsBP,IAAtB,EAA4BQ,SAA5B,EAAuC;IAChE,IAAId,KAAK,GAAGG,YAAY,CAACH,KAAzB;IAAA,IACIC,UAAU,GAAGE,YAAY,CAACF,UAD9B;;IAGA,IAAIc,SAAS,GAAG,SAASA,SAAT,GAAqB;MACnC,IAAIZ,YAAY,CAACD,MAAjB,EAAyB;MACzB,IAAIc,YAAY,GAAGrB,OAAO,CAACS,OAAR,CAAgBa,gBAAhB,CAAiC,iBAAjC,CAAnB;MACAjB,KAAK,CAACkB,IAAN,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACzB,OAAO3B,WAAW,CAACuB,YAAD,EAAeG,CAAf,CAAX,GAA+B1B,WAAW,CAACuB,YAAD,EAAeI,CAAf,CAAjD;MACD,CAFD;MAGAjB,YAAY,CAACD,MAAb,GAAsB,IAAtB;IACD,CAPD;;IASA,IAAIO,KAAK,GAAG,CAAC,CAAb;IAAA,IACIY,OAAO,GAAGC,SADd;;IAGA,QAAQT,UAAR;MACE,KAAKrB,gBAAgB,CAAC+B,KAAtB;QACE;;MAEF,KAAK/B,gBAAgB,CAACgC,GAAtB;QACEH,OAAO,GAAGf,IAAV;QACA;;MAEF,KAAKd,gBAAgB,CAACiC,KAAtB;QACEJ,OAAO,GAAG,SAASA,OAAT,CAAiBK,QAAjB,EAA2B;UACnC,OAAOA,QAAQ,KAAKpB,IAAb,GAAoBgB,SAApB,GAAgCI,QAAvC;QACD,CAFD;;QAIA;;MAEF,KAAKlC,gBAAgB,CAACmC,KAAtB;QACEZ,SAAS;QACTN,KAAK,GAAG,CAAR;QACAY,OAAO,GAAGrB,KAAK,CAACS,KAAD,CAAf;QACA;;MAEF,KAAKjB,gBAAgB,CAACoC,IAAtB;QACEb,SAAS;QACTN,KAAK,GAAGT,KAAK,CAAC6B,MAAN,GAAe,CAAvB;QACAR,OAAO,GAAGrB,KAAK,CAACS,KAAD,CAAf;QACA;;MAEF,KAAKjB,gBAAgB,CAACsC,SAAtB;QACEf,SAAS;QACTN,KAAK,GAAGK,SAAR;QACAO,OAAO,GAAGrB,KAAK,CAACS,KAAD,CAAf;QACA;;MAEF,KAAKjB,gBAAgB,CAACuC,QAAtB;QACEhB,SAAS;QACTN,KAAK,GAAGR,UAAR;QACA,IAAIQ,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcJ,IAAd,CAAR;QACfG,KAAK;QACL,IAAIA,KAAK,IAAIT,KAAK,CAAC6B,MAAnB,EAA2BpB,KAAK,GAAG,CAAR;QAC3BY,OAAO,GAAGrB,KAAK,CAACS,KAAD,CAAf;QACA;;MAEF,KAAKjB,gBAAgB,CAACwC,QAAtB;QACEjB,SAAS;QACTN,KAAK,GAAGR,UAAR;QACA,IAAIQ,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcJ,IAAd,CAAR;QACfG,KAAK;QACL,IAAIA,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAGT,KAAK,CAAC6B,MAAN,GAAe,CAAvB;QACfR,OAAO,GAAGrB,KAAK,CAACS,KAAD,CAAf;QACA;;MAEF;QACE,IAAIwB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C,MAAM,IAAIC,KAAJ,CAAU,6CAA6CvB,UAAvD,CAAN;IApD/C;;IAuDA,IAAI,CAACQ,OAAL,EAAcZ,KAAK,GAAG,CAAC,CAAT;IACdX,YAAY,CAACuB,OAAD,CAAZ;IACAlB,YAAY,CAACF,UAAb,GAA0BQ,KAA1B;EACD,CA1EyB,EA0EvB,CAACd,OAAD,EAAUQ,YAAV,CA1EuB,CAA1B;EA2EA,OAAO;IACLN,SAAS,EAAEA,SADN;IAELe,QAAQ,EAAEA,QAFL;IAGLP,WAAW,EAAEA;EAHR,CAAP;AAKD,CA1GD;;AA4GA,SAASX,QAAT"},"metadata":{},"sourceType":"module"}