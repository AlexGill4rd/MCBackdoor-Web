{"ast":null,"code":"var isBrowser = \"object\" !== 'undefined';\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\n\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\n\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };","map":{"version":3,"names":["isBrowser","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","registerStyles","cache","serialized","isStringTag","key","name","styles","insertStyles","inserted","current","maybeStyles","insert","sheet","next"],"sources":["E:/Sites/virusv4/Client/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js"],"sourcesContent":["var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,aAAa,WAA7B;;AACA,SAASC,mBAAT,CAA6BC,UAA7B,EAAyCC,gBAAzC,EAA2DC,UAA3D,EAAuE;EACrE,IAAIC,YAAY,GAAG,EAAnB;EACAD,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsBC,OAAtB,CAA8B,UAAUC,SAAV,EAAqB;IACjD,IAAIN,UAAU,CAACM,SAAD,CAAV,KAA0BC,SAA9B,EAAyC;MACvCN,gBAAgB,CAACO,IAAjB,CAAsBR,UAAU,CAACM,SAAD,CAAV,GAAwB,GAA9C;IACD,CAFD,MAEO;MACLH,YAAY,IAAIG,SAAS,GAAG,GAA5B;IACD;EACF,CAND;EAOA,OAAOH,YAAP;AACD;;AACD,IAAIM,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2CC,WAA3C,EAAwD;EAC3E,IAAIN,SAAS,GAAGI,KAAK,CAACG,GAAN,GAAY,GAAZ,GAAkBF,UAAU,CAACG,IAA7C;;EAEA,KAAK;EACL;EACA;EACA;EACA;EACA,CAACF,WAAW,KAAK,KAAhB,IAAyB;EAC1B;EACA;EACA;EACAd,SAAS,KAAK,KAJd,KAIyBY,KAAK,CAACV,UAAN,CAAiBM,SAAjB,MAAgCC,SATzD,EASoE;IAClEG,KAAK,CAACV,UAAN,CAAiBM,SAAjB,IAA8BK,UAAU,CAACI,MAAzC;EACD;AACF,CAfD;;AAgBA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBN,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;EACvEH,cAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,WAApB,CAAd;EACA,IAAIN,SAAS,GAAGI,KAAK,CAACG,GAAN,GAAY,GAAZ,GAAkBF,UAAU,CAACG,IAA7C;;EAEA,IAAIJ,KAAK,CAACO,QAAN,CAAeN,UAAU,CAACG,IAA1B,MAAoCP,SAAxC,EAAmD;IACjD,IAAIW,OAAO,GAAGP,UAAd;;IAEA,GAAG;MACD,IAAIQ,WAAW,GAAGT,KAAK,CAACU,MAAN,CAAaT,UAAU,KAAKO,OAAf,GAAyB,MAAMZ,SAA/B,GAA2C,EAAxD,EAA4DY,OAA5D,EAAqER,KAAK,CAACW,KAA3E,EAAkF,IAAlF,CAAlB;MAEAH,OAAO,GAAGA,OAAO,CAACI,IAAlB;IACD,CAJD,QAISJ,OAAO,KAAKX,SAJrB;EAKD;AACF,CAbD;;AAeA,SAASR,mBAAT,EAA8BiB,YAA9B,EAA4CP,cAA5C"},"metadata":{},"sourceType":"module"}