{"ast":null,"code":"export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","map":{"version":3,"names":["composeClasses","slots","getUtilityClass","classes","output","Object","keys","forEach","slot","reduce","acc","key","push","join"],"sources":["E:/Sites/virusv4/Client/node_modules/@mui/utils/esm/composeClasses/composeClasses.js"],"sourcesContent":["export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAgDC,OAAhD,EAAyD;EACtE,MAAMC,MAAM,GAAG,EAAf;EACAC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,OAAnB,EAA4B;EAC5B;EACAC,IAAI,IAAI;IACNJ,MAAM,CAACI,IAAD,CAAN,GAAeP,KAAK,CAACO,IAAD,CAAL,CAAYC,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;MAC9C,IAAIA,GAAJ,EAAS;QACP,IAAIR,OAAO,IAAIA,OAAO,CAACQ,GAAD,CAAtB,EAA6B;UAC3BD,GAAG,CAACE,IAAJ,CAAST,OAAO,CAACQ,GAAD,CAAhB;QACD;;QAEDD,GAAG,CAACE,IAAJ,CAASV,eAAe,CAACS,GAAD,CAAxB;MACD;;MAED,OAAOD,GAAP;IACD,CAVc,EAUZ,EAVY,EAURG,IAVQ,CAUH,GAVG,CAAf;EAWD,CAdD;EAeA,OAAOT,MAAP;AACD"},"metadata":{},"sourceType":"module"}