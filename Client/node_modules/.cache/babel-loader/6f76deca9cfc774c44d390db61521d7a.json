{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = function () {\n      return mediaListener.current(...arguments);\n    }; // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","map":{"version":3,"names":["_extends","React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","resolveValue","key","defaultValue","value","localStorage","getItem","e","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","joinedColorSchemes","join","setState","useState","initialMode","colorScheme","setMode","useCallback","currentState","newMode","setItem","setColorScheme","includes","console","error","newState","light","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["E:/Sites/virus-v5-web/Client/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args); // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}