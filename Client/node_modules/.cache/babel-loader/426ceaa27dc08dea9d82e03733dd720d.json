{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  let text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return false;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/.\n * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\n\nconst MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    autoFocus = false,\n    autoFocusItem = false,\n    children,\n    className,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    onKeyDown,\n    variant = 'selectedMenu'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const listRef = React.useRef(null);\n  const textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, () => ({\n    adjustStyleForScrollbar: (containerElement, theme) => {\n      // Let's ignore that piece of logic if users are already overriding the width\n      // of the menu.\n      const noExplicitWidth = !listRef.current.style.width;\n\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n        const scrollbarSize = `${getScrollbarSize(ownerDocument(containerElement))}px`;\n        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\n      }\n\n      return listRef.current;\n    }\n  }), []);\n\n  const handleKeyDown = event => {\n    const list = listRef.current;\n    const key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    const currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      const criteria = textCriteriaRef.current;\n      const lowerKey = key.toLowerCase();\n      const currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleRef = useForkRef(listRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      const newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsx(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other, {\n    children: items\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   * @default false\n   */\n  autoFocusItem: PropTypes.bool,\n\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the menu items will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","isFragment","PropTypes","ownerDocument","List","getScrollbarSize","useForkRef","useEnhancedEffect","jsx","_jsx","nextItem","list","item","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","undefined","text","innerText","textContent","trim","toLowerCase","length","repeating","keys","indexOf","join","moveFocus","currentFocus","disabledItemsFocusable","traversalFunction","wrappedOnce","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","MenuList","forwardRef","props","ref","actions","autoFocus","autoFocusItem","children","className","onKeyDown","variant","other","listRef","useRef","textCriteriaRef","previousKeyMatched","lastTime","current","useImperativeHandle","adjustStyleForScrollbar","containerElement","theme","noExplicitWidth","style","width","clientHeight","scrollbarSize","direction","handleKeyDown","event","key","activeElement","preventDefault","criteria","lowerKey","currTime","performance","now","push","keepFocusOnCurrent","handleRef","activeItemIndex","Children","forEach","child","index","isValidElement","process","env","NODE_ENV","console","error","selected","items","map","newChildProps","tabIndex","cloneElement","role","propTypes","bool","node","string","func","oneOf"],"sources":["E:/Sites/virus-v5-web/CLient/node_modules/@mui/material/MenuList/MenuList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  let text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return false;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/.\n * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\n\nconst MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    autoFocus = false,\n    autoFocusItem = false,\n    children,\n    className,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    onKeyDown,\n    variant = 'selectedMenu'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const listRef = React.useRef(null);\n  const textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, () => ({\n    adjustStyleForScrollbar: (containerElement, theme) => {\n      // Let's ignore that piece of logic if users are already overriding the width\n      // of the menu.\n      const noExplicitWidth = !listRef.current.style.width;\n\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n        const scrollbarSize = `${getScrollbarSize(ownerDocument(containerElement))}px`;\n        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\n      }\n\n      return listRef.current;\n    }\n  }), []);\n\n  const handleKeyDown = event => {\n    const list = listRef.current;\n    const key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    const currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      const criteria = textCriteriaRef.current;\n      const lowerKey = key.toLowerCase();\n      const currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleRef = useForkRef(listRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      const newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsx(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other, {\n    children: items\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   * @default false\n   */\n  autoFocusItem: PropTypes.bool,\n\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the menu items will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}