{"ast":null,"code":"function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","map":{"version":3,"names":["dateLongFormatter","pattern","formatLong","date","width","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P"],"sources":["E:/Sites/virus-v5-web/CLient/node_modules/date-fns/esm/_lib/format/longFormatters/index.js"],"sourcesContent":["function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,UAApC,EAAgD;EAC9C,QAAQD,OAAR;IACE,KAAK,GAAL;MACE,OAAOC,UAAU,CAACC,IAAX,CAAgB;QACrBC,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,IAAL;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QACrBC,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,KAAL;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QACrBC,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,MAAL;IACA;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QACrBC,KAAK,EAAE;MADc,CAAhB,CAAP;EAlBJ;AAsBD;;AAED,SAASC,iBAAT,CAA2BJ,OAA3B,EAAoCC,UAApC,EAAgD;EAC9C,QAAQD,OAAR;IACE,KAAK,GAAL;MACE,OAAOC,UAAU,CAACI,IAAX,CAAgB;QACrBF,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,IAAL;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QACrBF,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,KAAL;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QACrBF,KAAK,EAAE;MADc,CAAhB,CAAP;;IAIF,KAAK,MAAL;IACA;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QACrBF,KAAK,EAAE;MADc,CAAhB,CAAP;EAlBJ;AAsBD;;AAED,SAASG,qBAAT,CAA+BN,OAA/B,EAAwCC,UAAxC,EAAoD;EAClD,IAAIM,WAAW,GAAGP,OAAO,CAACQ,KAAR,CAAc,WAAd,KAA8B,EAAhD;EACA,IAAIC,WAAW,GAAGF,WAAW,CAAC,CAAD,CAA7B;EACA,IAAIG,WAAW,GAAGH,WAAW,CAAC,CAAD,CAA7B;;EAEA,IAAI,CAACG,WAAL,EAAkB;IAChB,OAAOX,iBAAiB,CAACC,OAAD,EAAUC,UAAV,CAAxB;EACD;;EAED,IAAIU,cAAJ;;EAEA,QAAQF,WAAR;IACE,KAAK,GAAL;MACEE,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QACnCT,KAAK,EAAE;MAD4B,CAApB,CAAjB;MAGA;;IAEF,KAAK,IAAL;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QACnCT,KAAK,EAAE;MAD4B,CAApB,CAAjB;MAGA;;IAEF,KAAK,KAAL;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QACnCT,KAAK,EAAE;MAD4B,CAApB,CAAjB;MAGA;;IAEF,KAAK,MAAL;IACA;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QACnCT,KAAK,EAAE;MAD4B,CAApB,CAAjB;MAGA;EAxBJ;;EA2BA,OAAOQ,cAAc,CAACE,OAAf,CAAuB,UAAvB,EAAmCd,iBAAiB,CAACU,WAAD,EAAcR,UAAd,CAApD,EAA+EY,OAA/E,CAAuF,UAAvF,EAAmGT,iBAAiB,CAACM,WAAD,EAAcT,UAAd,CAApH,CAAP;AACD;;AAED,IAAIa,cAAc,GAAG;EACnBC,CAAC,EAAEX,iBADgB;EAEnBY,CAAC,EAAEV;AAFgB,CAArB;AAIA,eAAeQ,cAAf"},"metadata":{},"sourceType":"module"}