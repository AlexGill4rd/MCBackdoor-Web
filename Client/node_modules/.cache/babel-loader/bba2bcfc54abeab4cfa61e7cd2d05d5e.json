{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps } from '@mui/material/styles';\nimport { Clock } from '../internals/components/icons';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { parsePickerInputValue } from '../internals/utils/date-utils';\n\nfunction getTextFieldAriaText(value, utils) {\n  return value && utils.isValid(utils.date(value)) ? `Choose time, selected time is ${utils.format(utils.date(value), 'fullTime')}` : 'Choose time';\n}\n\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm; // This is technically unsound if the type parameters appear in optional props.\n  // Optional props can be filled by `useThemeProps` with types that don't match the type parameters.\n\n\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const utils = useUtils();\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  return _extends({\n    ampm,\n    openTo: 'hours',\n    views: ['hours', 'minutes'],\n    acceptRegex: ampm ? /[\\dapAP]/gi : /\\d/gi,\n    mask: ampm ? '__:__ _m' : '__:__',\n    disableMaskedInput: false,\n    getOpenDialogAriaText: getTextFieldAriaText,\n    inputFormat: ampm ? utils.formats.fullTime12h : utils.formats.fullTime24h\n  }, themeProps, {\n    components: _extends({\n      OpenPickerIcon: Clock\n    }, themeProps.components)\n  });\n}\nexport const timePickerValueManager = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  getTodayValue: utils => utils.date(),\n  areValuesEqual: (utils, a, b) => utils.isEqual(a, b),\n  valueReducer: (utils, lastValidValue, newValue) => {\n    if (!lastValidValue || !utils.isValid(newValue)) {\n      return newValue;\n    }\n\n    return utils.mergeDateAndTime(lastValidValue, newValue);\n  }\n};","map":{"version":3,"names":["_extends","useThemeProps","Clock","useUtils","parsePickerInputValue","getTextFieldAriaText","value","utils","isValid","date","format","useTimePickerDefaultizedProps","props","name","_themeProps$ampm","themeProps","ampm","is12HourCycleInCurrentLocale","openTo","views","acceptRegex","mask","disableMaskedInput","getOpenDialogAriaText","inputFormat","formats","fullTime12h","fullTime24h","components","OpenPickerIcon","timePickerValueManager","emptyValue","parseInput","getTodayValue","areValuesEqual","a","b","isEqual","valueReducer","lastValidValue","newValue","mergeDateAndTime"],"sources":["E:/Sites/virus-v5-web/Client/node_modules/@mui/x-date-pickers/TimePicker/shared.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps } from '@mui/material/styles';\nimport { Clock } from '../internals/components/icons';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { parsePickerInputValue } from '../internals/utils/date-utils';\n\nfunction getTextFieldAriaText(value, utils) {\n  return value && utils.isValid(utils.date(value)) ? `Choose time, selected time is ${utils.format(utils.date(value), 'fullTime')}` : 'Choose time';\n}\n\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm;\n\n  // This is technically unsound if the type parameters appear in optional props.\n  // Optional props can be filled by `useThemeProps` with types that don't match the type parameters.\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const utils = useUtils();\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  return _extends({\n    ampm,\n    openTo: 'hours',\n    views: ['hours', 'minutes'],\n    acceptRegex: ampm ? /[\\dapAP]/gi : /\\d/gi,\n    mask: ampm ? '__:__ _m' : '__:__',\n    disableMaskedInput: false,\n    getOpenDialogAriaText: getTextFieldAriaText,\n    inputFormat: ampm ? utils.formats.fullTime12h : utils.formats.fullTime24h\n  }, themeProps, {\n    components: _extends({\n      OpenPickerIcon: Clock\n    }, themeProps.components)\n  });\n}\nexport const timePickerValueManager = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  getTodayValue: utils => utils.date(),\n  areValuesEqual: (utils, a, b) => utils.isEqual(a, b),\n  valueReducer: (utils, lastValidValue, newValue) => {\n    if (!lastValidValue || !utils.isValid(newValue)) {\n      return newValue;\n    }\n\n    return utils.mergeDateAndTime(lastValidValue, newValue);\n  }\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,KAArC,EAA4C;EAC1C,OAAOD,KAAK,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAd,CAAT,GAA6C,iCAAgCC,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAb,EAAgC,UAAhC,CAA4C,EAAzH,GAA6H,aAApI;AACD;;AAED,OAAO,SAASK,6BAAT,CAAuCC,KAAvC,EAA8CC,IAA9C,EAAoD;EACzD,IAAIC,gBAAJ,CADyD,CAGzD;EACA;;;EACA,MAAMC,UAAU,GAAGd,aAAa,CAAC;IAC/BW,KAD+B;IAE/BC;EAF+B,CAAD,CAAhC;EAIA,MAAMN,KAAK,GAAGJ,QAAQ,EAAtB;EACA,MAAMa,IAAI,GAAG,CAACF,gBAAgB,GAAGC,UAAU,CAACC,IAA/B,KAAwC,IAAxC,GAA+CF,gBAA/C,GAAkEP,KAAK,CAACU,4BAAN,EAA/E;EACA,OAAOjB,QAAQ,CAAC;IACdgB,IADc;IAEdE,MAAM,EAAE,OAFM;IAGdC,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,CAHO;IAIdC,WAAW,EAAEJ,IAAI,GAAG,YAAH,GAAkB,MAJrB;IAKdK,IAAI,EAAEL,IAAI,GAAG,UAAH,GAAgB,OALZ;IAMdM,kBAAkB,EAAE,KANN;IAOdC,qBAAqB,EAAElB,oBAPT;IAQdmB,WAAW,EAAER,IAAI,GAAGT,KAAK,CAACkB,OAAN,CAAcC,WAAjB,GAA+BnB,KAAK,CAACkB,OAAN,CAAcE;EARhD,CAAD,EASZZ,UATY,EASA;IACba,UAAU,EAAE5B,QAAQ,CAAC;MACnB6B,cAAc,EAAE3B;IADG,CAAD,EAEjBa,UAAU,CAACa,UAFM;EADP,CATA,CAAf;AAcD;AACD,OAAO,MAAME,sBAAsB,GAAG;EACpCC,UAAU,EAAE,IADwB;EAEpCC,UAAU,EAAE5B,qBAFwB;EAGpC6B,aAAa,EAAE1B,KAAK,IAAIA,KAAK,CAACE,IAAN,EAHY;EAIpCyB,cAAc,EAAE,CAAC3B,KAAD,EAAQ4B,CAAR,EAAWC,CAAX,KAAiB7B,KAAK,CAAC8B,OAAN,CAAcF,CAAd,EAAiBC,CAAjB,CAJG;EAKpCE,YAAY,EAAE,CAAC/B,KAAD,EAAQgC,cAAR,EAAwBC,QAAxB,KAAqC;IACjD,IAAI,CAACD,cAAD,IAAmB,CAAChC,KAAK,CAACC,OAAN,CAAcgC,QAAd,CAAxB,EAAiD;MAC/C,OAAOA,QAAP;IACD;;IAED,OAAOjC,KAAK,CAACkC,gBAAN,CAAuBF,cAAvB,EAAuCC,QAAvC,CAAP;EACD;AAXmC,CAA/B"},"metadata":{},"sourceType":"module"}