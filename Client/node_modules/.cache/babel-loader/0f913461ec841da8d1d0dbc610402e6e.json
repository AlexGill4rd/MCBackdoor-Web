{"ast":null,"code":"import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\n\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","map":{"version":3,"names":["PropTypes","createContainer","Container","process","env","NODE_ENV","propTypes","children","node","classes","object","component","elementType","disableGutters","bool","fixed","maxWidth","oneOfType","oneOf","string","sx","arrayOf","func"],"sources":["E:/Sites/virus-v5-web/CLient/node_modules/@mui/system/esm/Container/Container.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\n\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGD,eAAe,EAAjC;AACAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCH,SAAS,CAACI;AAClD;AADwC,EAEtC;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEC,QAAQ,EAAEP,SAAS,CAACQ,IATpB;;EAWA;AACF;AACA;EACEC,OAAO,EAAET,SAAS,CAACU,MAdnB;;EAgBA;AACF;AACA;AACA;EACEC,SAAS,EAAEX,SAAS,CAACY,WApBrB;;EAsBA;AACF;AACA;AACA;EACEC,cAAc,EAAEb,SAAS,CAACc,IA1B1B;;EA4BA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAEf,SAAS,CAACc,IAnCjB;;EAqCA;AACF;AACA;AACA;AACA;AACA;EACEE,QAAQ,EAAEhB;EACV;EADmB,CAElBiB,SAFS,CAEC,CAACjB,SAAS,CAACkB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAhB,CAAD,EAAyDlB,SAAS,CAACmB,MAAnE,CAFD,CA3CV;;EA+CA;AACF;AACA;EACEC,EAAE,EAAEpB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACsB,IAAX,EAAiBtB,SAAS,CAACU,MAA3B,EAAmCV,SAAS,CAACc,IAA7C,CAApB,CAAlB,CAAD,EAA6Fd,SAAS,CAACsB,IAAvG,EAA6GtB,SAAS,CAACU,MAAvH,CAApB;AAlDJ,CAFF,GAqDI,KAAK,CArDT;AAsDA,eAAeR,SAAf"},"metadata":{},"sourceType":"module"}