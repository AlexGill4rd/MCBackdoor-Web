{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\serverpage\\\\components\\\\ServerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport IpAddress from '../../../IpAddress';\nimport ServerTab from './ServerTab';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction ServerList() {\n  _s();\n\n  const servers = [];\n  useEffect(() => {\n    socket.emit(\"client:get-server\");\n    socket.on(`server:active-server`, data => {\n      data.id = servers.length;\n      servers.push(data);\n      servers.forEach(server => {\n        console.log(server);\n      });\n    });\n  }, []);\n  return servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ServerTab, {\n      server: server\n    }, server.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, server.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this));\n}\n\n_s(ServerList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["useEffect","IpAddress","ServerTab","socketIOClient","ip","socket","getIP","ServerList","servers","emit","on","data","id","length","push","forEach","server","console","log","map"],"sources":["E:/Sites/virusv4/Client/src/pages/serverpage/components/ServerList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport IpAddress from '../../../IpAddress';\r\nimport ServerTab from './ServerTab';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction ServerList(){\r\n    const servers: Array<any> = [];\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"client:get-server\");\r\n        socket.on(`server:active-server`, data => {\r\n            data.id = servers.length;\r\n            servers.push(data)\r\n            servers.forEach((server) => {\r\n                console.log(server)\r\n            });\r\n        })\r\n    }, []);\r\n    return (\r\n        servers.map((server: any) => (  \r\n            <div key={server.id}>  \r\n                <ServerTab key={server.id} server={server} />\r\n            </div>  \r\n          ))  \r\n    );\r\n}\r\nexport default ServerList;"],"mappings":";;;AAAA,SAASA,SAAT,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAIC,EAAE,GAAG,IAAIH,SAAJ,EAAT;AACA,IAAII,MAAM,GAAGF,cAAc,CAAE,UAASC,EAAE,CAACE,KAAH,EAAW,OAAtB,CAA3B;;AAEA,SAASC,UAAT,GAAqB;EAAA;;EACjB,MAAMC,OAAmB,GAAG,EAA5B;EAEAR,SAAS,CAAC,MAAM;IACZK,MAAM,CAACI,IAAP,CAAY,mBAAZ;IACAJ,MAAM,CAACK,EAAP,CAAW,sBAAX,EAAkCC,IAAI,IAAI;MACtCA,IAAI,CAACC,EAAL,GAAUJ,OAAO,CAACK,MAAlB;MACAL,OAAO,CAACM,IAAR,CAAaH,IAAb;MACAH,OAAO,CAACO,OAAR,CAAiBC,MAAD,IAAY;QACxBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACH,CAFD;IAGH,CAND;EAOH,CATQ,EASN,EATM,CAAT;EAUA,OACIR,OAAO,CAACW,GAAR,CAAaH,MAAD,iBACR;IAAA,uBACI,QAAC,SAAD;MAA2B,MAAM,EAAEA;IAAnC,GAAgBA,MAAM,CAACJ,EAAvB;MAAA;MAAA;MAAA;IAAA;EADJ,GAAUI,MAAM,CAACJ,EAAjB;IAAA;IAAA;IAAA;EAAA,QADJ,CADJ;AAOH;;GApBQL,U;;KAAAA,U;AAqBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}