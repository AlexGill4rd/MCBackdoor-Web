{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { colorChannel } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport { getOverlayAlpha } from '../Paper/Paper';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nexport default function extendTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {}\n  } = options,\n        input = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n\n  let theme = _extends({}, muiTheme, {\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          placeholder: 0.42,\n          inputTouchBottomLine: 0.42\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          placeholder: 0.5,\n          inputTouchBottomLine: 0.7\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'dark') {\n      palette.common.background = palette.common.background || '#000';\n      palette.common.onBackground = palette.common.onBackground || '#fff';\n    } else {\n      palette.common.background = palette.common.background || '#fff';\n      palette.common.onBackground = palette.common.onBackground || '#000';\n    }\n\n    palette.common.backgroundChannel = colorChannel(palette.common.background);\n    palette.common.onBackgroundChannel = colorChannel(palette.common.onBackground);\n    palette.dividerChannel = colorChannel(palette.divider); // special token for Tooltip\n    // TODO: consider adding `main`, and `light` to palette.grey to make it consistent.\n\n    if (!palette.grey.dark) {\n      palette.grey.dark = palette.grey[700];\n    }\n\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = colorChannel(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = colorChannel(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = colorChannel(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = colorChannel(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = colorChannel(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = colorChannel(colors.secondary);\n      } // Action colors: action.activeChannel\n\n\n      if (colors.active) {\n        palette[color].activeChannel = colorChannel(colors.active);\n      }\n    });\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  return theme;\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","colorChannel","createThemeWithoutVars","getOverlayAlpha","defaultDarkOverlays","Array","map","_","index","undefined","overlay","extendTheme","options","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","_createThemeWithoutVa","light","palette","lightPalette","muiTheme","darkPalette","mode","dark","theme","opacity","placeholder","inputTouchBottomLine","overlays","Object","keys","forEach","key","common","background","onBackground","backgroundChannel","onBackgroundChannel","dividerChannel","divider","grey","color","colors","main","mainChannel","lightChannel","darkChannel","contrastText","contrastTextChannel","primary","primaryChannel","secondary","secondaryChannel","active","activeChannel","args","reduce","acc","argument"],"sources":["E:/Sites/virus-v5-web/CLient/node_modules/@mui/material/styles/experimental_extendTheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { colorChannel } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport { getOverlayAlpha } from '../Paper/Paper';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {}\n  } = options,\n        input = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n\n  let theme = _extends({}, muiTheme, {\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          placeholder: 0.42,\n          inputTouchBottomLine: 0.42\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          placeholder: 0.5,\n          inputTouchBottomLine: 0.7\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'dark') {\n      palette.common.background = palette.common.background || '#000';\n      palette.common.onBackground = palette.common.onBackground || '#fff';\n    } else {\n      palette.common.background = palette.common.background || '#fff';\n      palette.common.onBackground = palette.common.onBackground || '#000';\n    }\n\n    palette.common.backgroundChannel = colorChannel(palette.common.background);\n    palette.common.onBackgroundChannel = colorChannel(palette.common.onBackground);\n    palette.dividerChannel = colorChannel(palette.divider); // special token for Tooltip\n    // TODO: consider adding `main`, and `light` to palette.grey to make it consistent.\n\n    if (!palette.grey.dark) {\n      palette.grey.dark = palette.grey[700];\n    }\n\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = colorChannel(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = colorChannel(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = colorChannel(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = colorChannel(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = colorChannel(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = colorChannel(colors.secondary);\n      } // Action colors: action.activeChannel\n\n\n      if (colors.active) {\n        palette[color].activeChannel = colorChannel(colors.active);\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  return theme;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}