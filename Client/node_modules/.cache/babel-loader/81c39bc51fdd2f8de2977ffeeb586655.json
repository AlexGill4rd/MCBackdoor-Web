{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.indexOf(option);\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  if (multiple) {\n    var _ref, _ref2;\n\n    const selectedValues = (_ref = selectedValue) != null ? _ref : []; // if the option is already selected, remove it from the selection, otherwise add it\n\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, props);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n\n  return text.indexOf(searchString) === 0;\n};\n\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n\n  const moveHighlight = previouslyHighlightedOption => {\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);\n  };\n\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue); // use `for` instead of `while` prevent infinite loop\n\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    } // Move to the next element.\n\n\n    nextOption = moveHighlight(nextOption);\n  } // No option match text search criteria\n\n\n  return state;\n}\n\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  if (multiple) {\n    var _ref3; // exclude selected values that are no longer in the options\n\n\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabled","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","nextIndexCandidate","previouslyHighlightedIndex","findIndex","option","_options$defaultHighl","newIndex","Math","abs","nextIndex","handleOptionSelection","state","props","multiple","v","selectedValue","optionIndex","indexOf","_ref","_ref2","selectedValues","newSelectedValues","some","sv","filter","highlightedValue","handleKeyDown","event","disableListWrap","disabledItemsFocusable","moveHighlight","direction","key","handleBlur","textCriteriaMatches","searchString","stringifyOption","_stringifyOption","text","trim","toLowerCase","handleTextNavigation","optionStringifier","startWithCurrentOption","nextOption","handleOptionsChange","previousOptions","_options$find","_options$find2","newHighlightedOption","find","_ref3","newSelectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","textNavigation","optionsChange"],"sources":["E:/Sites/virus-v5-web/CLient/node_modules/@mui/base/ListboxUnstyled/defaultListboxReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.indexOf(option);\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  if (multiple) {\n    var _ref, _ref2;\n\n    const selectedValues = (_ref = selectedValue) != null ? _ref : []; // if the option is already selected, remove it from the selection, otherwise add it\n\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, props);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n\n  return text.indexOf(searchString) === 0;\n};\n\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n\n  const moveHighlight = previouslyHighlightedOption => {\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);\n  };\n\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue); // use `for` instead of `while` prevent infinite loop\n\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    } // Move to the next element.\n\n\n    nextOption = moveHighlight(nextOption);\n  } // No option match text search criteria\n\n\n  return state;\n}\n\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  if (multiple) {\n    var _ref3;\n\n    // exclude selected values that are no longer in the options\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}