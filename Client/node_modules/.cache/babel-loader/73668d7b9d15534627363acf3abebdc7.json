{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  const {\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value,\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = appendOwnerState(Root, _extends({}, other, optionProps, componentsProps.root, {\n    ref: handleRef,\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","appendOwnerState","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","_componentsProps$root","children","className","component","components","componentsProps","value","label","other","selectContext","useContext","Error","Root","selectOption","optionState","getOptionState","optionProps","getOptionProps","listboxRef","optionRef","useRef","handleRef","useEffect","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","classes","rootProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","any","isRequired","memo"],"sources":["E:/Sites/virus-v5-web/Client/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  const {\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value,\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = appendOwnerState(Root, _extends({}, other, optionProps, componentsProps.root, {\n    ref: handleRef,\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"],"mappings":"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"},"metadata":{},"sourceType":"module"}