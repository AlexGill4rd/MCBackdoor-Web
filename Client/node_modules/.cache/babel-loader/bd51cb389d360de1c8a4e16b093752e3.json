{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\serverpage\\\\components\\\\ServerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport IpAddress from '../../../IpAddress';\nimport ServerTab from './ServerTab';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction ServerList() {\n  _s();\n\n  const [servers, setServers] = useState([]);\n  useEffect(() => {\n    socket.emit(\"client:get-server\");\n    socket.on(`server:active-server`, data => {\n      data.id = servers.length;\n      console.log(servers);\n      servers.push(data);\n      setServers(servers);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ServerTab, {\n        server: server\n      }, server.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, server.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(ServerList, \"xfSG+wryFcgzvchjWZabd3QMWJw=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["useEffect","useState","IpAddress","ServerTab","socketIOClient","ip","socket","getIP","ServerList","servers","setServers","emit","on","data","id","length","console","log","push","map","server"],"sources":["E:/Sites/virusv4/Client/src/pages/serverpage/components/ServerList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport IpAddress from '../../../IpAddress';\r\nimport ServerTab from './ServerTab';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction ServerList(){\r\n    const [servers, setServers] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"client:get-server\");\r\n        socket.on(`server:active-server`, data => {\r\n            data.id = servers.length;\r\n            console.log(servers);\r\n            servers.push(data);\r\n            setServers(servers)\r\n        })\r\n    }, []);\r\n    return <>{\r\n        servers.map((server: {Image: string, Name: string, State: boolean, id: number}) => \r\n        <div key={server.id}>{\r\n            <ServerTab key={server.id} server={server} />\r\n        }</div>)\r\n      }</>\r\n}\r\nexport default ServerList;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,IAAIC,EAAE,GAAG,IAAIH,SAAJ,EAAT;AACA,IAAII,MAAM,GAAGF,cAAc,CAAE,UAASC,EAAE,CAACE,KAAH,EAAW,OAAtB,CAA3B;;AAEA,SAASC,UAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAM,EAAN,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZM,MAAM,CAACK,IAAP,CAAY,mBAAZ;IACAL,MAAM,CAACM,EAAP,CAAW,sBAAX,EAAkCC,IAAI,IAAI;MACtCA,IAAI,CAACC,EAAL,GAAUL,OAAO,CAACM,MAAlB;MACAC,OAAO,CAACC,GAAR,CAAYR,OAAZ;MACAA,OAAO,CAACS,IAAR,CAAaL,IAAb;MACAH,UAAU,CAACD,OAAD,CAAV;IACH,CALD;EAMH,CARQ,EAQN,EARM,CAAT;EASA,oBAAO;IAAA,UACHA,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACZ;MAAA,uBACI,QAAC,SAAD;QAA2B,MAAM,EAAEA;MAAnC,GAAgBA,MAAM,CAACN,EAAvB;QAAA;QAAA;QAAA;MAAA;IADJ,GAAUM,MAAM,CAACN,EAAjB;MAAA;MAAA;MAAA;IAAA,QADA;EADG,iBAAP;AAMH;;GAlBQN,U;;KAAAA,U;AAmBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}