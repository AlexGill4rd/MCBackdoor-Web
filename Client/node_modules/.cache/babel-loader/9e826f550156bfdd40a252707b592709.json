{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\serverpage\\\\components\\\\ServerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport IpAddress from '../../../IpAddress';\nimport ServerTab from './ServerTab';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ip = new IpAddress();\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`);\n\nfunction ServerList() {\n  _s();\n\n  const [servers, setServers] = useState([]);\n  useEffect(() => {\n    socket.emit(\"client:get-server\");\n    socket.on(`server:active-server`, data => {\n      data.id = servers.length;\n      setServers([...servers, data]);\n    });\n  }, []);\n  return servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ServerTab, {\n      server: server\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, server.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this));\n}\n\n_s(ServerList, \"xfSG+wryFcgzvchjWZabd3QMWJw=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["useEffect","useState","IpAddress","ServerTab","socketIOClient","ip","socket","getIP","ServerList","servers","setServers","emit","on","data","id","length","map","server"],"sources":["E:/Sites/virusv4/Client/src/pages/serverpage/components/ServerList.tsx"],"sourcesContent":["import { Key, useEffect, useState } from 'react';\r\nimport IpAddress from '../../../IpAddress';\r\nimport ServerTab from './ServerTab';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nvar ip = new IpAddress();\r\nlet socket = socketIOClient(`http://${ip.getIP()}:3001`)\r\n\r\nfunction ServerList(){\r\n    const [servers, setServers] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"client:get-server\");\r\n        socket.on(`server:active-server`, data => {\r\n            data.id = servers.length;\r\n            setServers([...servers, data]);\r\n        })\r\n    }, []);\r\n    return (\r\n        servers.map((server: {id: number}) => \r\n        <div key={server.id}>{\r\n            <ServerTab server={server}/>\r\n        }</div>)\r\n    );\r\n}\r\nexport default ServerList;"],"mappings":";;;AAAA,SAAcA,SAAd,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAIC,EAAE,GAAG,IAAIH,SAAJ,EAAT;AACA,IAAII,MAAM,GAAGF,cAAc,CAAE,UAASC,EAAE,CAACE,KAAH,EAAW,OAAtB,CAA3B;;AAEA,SAASC,UAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAM,EAAN,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZM,MAAM,CAACK,IAAP,CAAY,mBAAZ;IACAL,MAAM,CAACM,EAAP,CAAW,sBAAX,EAAkCC,IAAI,IAAI;MACtCA,IAAI,CAACC,EAAL,GAAUL,OAAO,CAACM,MAAlB;MACAL,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaI,IAAb,CAAD,CAAV;IACH,CAHD;EAIH,CANQ,EAMN,EANM,CAAT;EAOA,OACIJ,OAAO,CAACO,GAAR,CAAaC,MAAD,iBACZ;IAAA,uBACI,QAAC,SAAD;MAAW,MAAM,EAAEA;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ,GAAUA,MAAM,CAACH,EAAjB;IAAA;IAAA;IAAA;EAAA,QADA,CADJ;AAMH;;GAhBQN,U;;KAAAA,U;AAiBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}