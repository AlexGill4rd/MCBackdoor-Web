{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\debugpage\\\\DebugPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport { socket } from '../../context/socket';\nimport './DebugPageStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DebugPage() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const divRef = useRef(null);\n  useEffect(function updateMessages() {\n    socket.on(`server:log`, data => {\n      var date = new Date();\n\n      var messageString = /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [date.toLocaleTimeString() + \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n\n      setMessages(arr => [...arr, messageString]);\n    });\n  }, []);\n  useEffect(() => {\n    if (divRef.current) {\n      divRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"debug-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-console\",\n      ref: divRef,\n      children: messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DebugPage, \"8tPAqgnWsGPZ5INeKTSGNAfJwgE=\");\n\n_c = DebugPage;\nexport default DebugPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DebugPage\");","map":{"version":3,"names":["Fragment","useEffect","useRef","useState","socket","DebugPage","messages","setMessages","divRef","updateMessages","on","data","date","Date","messageString","toLocaleTimeString","arr","current","scrollIntoView","behavior","block","map","message","index"],"sources":["E:/Sites/virusv4/Client/src/pages/debugpage/DebugPage.tsx"],"sourcesContent":["import { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { socket } from '../../context/socket';\r\nimport './DebugPageStyle.scss';\r\n\r\nfunction DebugPage(){\r\n    const [messages, setMessages] = useState<any>([]);\r\n    const divRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    useEffect(function updateMessages(){\r\n        socket.on(`server:log`, data => {\r\n            var date = new Date();\r\n            var messageString = (\r\n                <Fragment>\r\n                  <p>{date.toLocaleTimeString() + \" - \"} \r\n                      <strong>{data}</strong>\r\n                  </p><br/>\r\n                </Fragment>\r\n              )\r\n            setMessages( (arr: any) => [...arr, messageString]);\r\n        })\r\n    }, []);\r\n    useEffect(() => {\r\n        if (divRef.current) {\r\n            divRef.current.scrollIntoView(\r\n              {\r\n                behavior: 'smooth',\r\n                block: 'end'\r\n              })\r\n          }\r\n      });\r\n    return (\r\n        <div className=\"debug-container\" >\r\n            <div className='debug-console' ref={divRef}>\r\n                {messages.map((message:string, index: number) => \r\n                {\r\n                    return <div key={index} >{message}</div> \r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DebugPage;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAO,uBAAP;;;AAEA,SAASC,SAAT,GAAoB;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAM,EAAN,CAAxC;EACA,MAAMK,MAAM,GAAGN,MAAM,CAAwB,IAAxB,CAArB;EAEAD,SAAS,CAAC,SAASQ,cAAT,GAAyB;IAC/BL,MAAM,CAACM,EAAP,CAAW,YAAX,EAAwBC,IAAI,IAAI;MAC5B,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;MACA,IAAIC,aAAa,gBACb,QAAC,QAAD;QAAA,wBACE;UAAA,WAAIF,IAAI,CAACG,kBAAL,KAA4B,KAAhC,eACI;YAAA,UAASJ;UAAT;YAAA;YAAA;YAAA;UAAA,QADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAGM;UAAA;UAAA;UAAA;QAAA,QAHN;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;;MAOAJ,WAAW,CAAGS,GAAD,IAAc,CAAC,GAAGA,GAAJ,EAASF,aAAT,CAAhB,CAAX;IACH,CAVD;EAWH,CAZQ,EAYN,EAZM,CAAT;EAaAb,SAAS,CAAC,MAAM;IACZ,IAAIO,MAAM,CAACS,OAAX,EAAoB;MAChBT,MAAM,CAACS,OAAP,CAAeC,cAAf,CACE;QACEC,QAAQ,EAAE,QADZ;QAEEC,KAAK,EAAE;MAFT,CADF;IAKD;EACJ,CARM,CAAT;EASA,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,eAAf;MAA+B,GAAG,EAAEZ,MAApC;MAAA,UACKF,QAAQ,CAACe,GAAT,CAAa,CAACC,OAAD,EAAiBC,KAAjB,KACd;QACI,oBAAO;UAAA,UAAmBD;QAAnB,GAAUC,KAAV;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAHA;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GApCQlB,S;;KAAAA,S;AAqCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}