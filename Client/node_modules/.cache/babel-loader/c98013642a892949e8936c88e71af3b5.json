{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    let skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementTypeAcceptingRef","refType","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","ButtonBaseRoot","name","slot","overridesResolver","props","styles","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","setFocusVisible","useState","useImperativeHandle","current","focus","mountedState","setMountedState","useEffect","enableTouchRipple","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","undefined","role","handleOwnRef","handleRef","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","arrayOf","number","shape","isRequired","oneOf"],"sources":["E:/Sites/virusv4/Client/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}