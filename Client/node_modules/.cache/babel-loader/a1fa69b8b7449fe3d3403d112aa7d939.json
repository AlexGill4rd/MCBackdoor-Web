{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virusv4\\\\Client\\\\src\\\\pages\\\\servercontrollers\\\\loggingcontroller\\\\LogginControllerPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { socket } from \"../../../socket/socket\";\nimport './LogginControllerPageStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LogginControllerPage() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const {\n    serverid\n  } = useParams();\n  const [server, setServer] = useState([]);\n  useEffect(function loadServer() {\n    socket.emit(\"client:mcserver-get\", serverid);\n  }, []);\n  useEffect(function updateServer() {\n    socket.on(`server:mcserver-get`, data => {\n      setServer(JSON.parse(data.JsonData));\n    });\n  }, []);\n  useEffect(function updateLogs() {\n    socket.on(\"server-log\", data => {\n      if (data.Address === server.Address) {\n        console.log(data);\n        setMessages(messages => [...messages, data.Message]);\n        console.log(messages);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logging-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logging-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logging-panel-message-container\",\n        children: messages.map((message, index) => {\n          console.log(message);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logging-panel-message-container-message\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogginControllerPage, \"g8zVnGgWtICCuqM9zaAq47sTMaA=\", false, function () {\n  return [useParams];\n});\n\n_c = LogginControllerPage;\nexport default LogginControllerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogginControllerPage\");","map":{"version":3,"names":["useEffect","useState","useParams","socket","LogginControllerPage","messages","setMessages","serverid","server","setServer","loadServer","emit","updateServer","on","data","JSON","parse","JsonData","updateLogs","Address","console","log","Message","map","message","index"],"sources":["E:/Sites/virusv4/Client/src/pages/servercontrollers/loggingcontroller/LogginControllerPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { socket } from \"../../../socket/socket\";\r\n\r\nimport './LogginControllerPageStyle.scss'\r\n\r\nfunction LogginControllerPage(){\r\n    const [messages, setMessages] = useState<any>([]);\r\n    const { serverid } = useParams();\r\n    const [server, setServer] = useState<any>([]);\r\n\r\n    useEffect(function loadServer(){\r\n        socket.emit(\"client:mcserver-get\", serverid)\r\n    }, []);\r\n    useEffect(function updateServer(){\r\n        socket.on(`server:mcserver-get`, data => {\r\n            setServer(JSON.parse(data.JsonData))\r\n        })\r\n    }, []);\r\n    useEffect(function updateLogs(){\r\n        socket.on(\"server-log\", data => {\r\n            if (data.Address === server.Address){\r\n                console.log(data)\r\n                setMessages((messages: any) => [...messages, data.Message]);\r\n                console.log(messages)\r\n            }\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className=\"logging-container\">\r\n            <div className=\"logging-panel\">\r\n                <div className=\"logging-panel-message-container\">\r\n                    {messages.map((message: string, index: number) => {\r\n                        console.log(message)\r\n                        return (\r\n                            <div key={index} className=\"logging-panel-message-container-message\">\r\n                                {message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default LogginControllerPage;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,OAAO,kCAAP;;;AAEA,SAASC,oBAAT,GAA+B;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAM,EAAN,CAAxC;EACA,MAAM;IAAEM;EAAF,IAAeL,SAAS,EAA9B;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAM,EAAN,CAApC;EAEAD,SAAS,CAAC,SAASU,UAAT,GAAqB;IAC3BP,MAAM,CAACQ,IAAP,CAAY,qBAAZ,EAAmCJ,QAAnC;EACH,CAFQ,EAEN,EAFM,CAAT;EAGAP,SAAS,CAAC,SAASY,YAAT,GAAuB;IAC7BT,MAAM,CAACU,EAAP,CAAW,qBAAX,EAAiCC,IAAI,IAAI;MACrCL,SAAS,CAACM,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,QAAhB,CAAD,CAAT;IACH,CAFD;EAGH,CAJQ,EAIN,EAJM,CAAT;EAKAjB,SAAS,CAAC,SAASkB,UAAT,GAAqB;IAC3Bf,MAAM,CAACU,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;MAC5B,IAAIA,IAAI,CAACK,OAAL,KAAiBX,MAAM,CAACW,OAA5B,EAAoC;QAChCC,OAAO,CAACC,GAAR,CAAYP,IAAZ;QACAR,WAAW,CAAED,QAAD,IAAmB,CAAC,GAAGA,QAAJ,EAAcS,IAAI,CAACQ,OAAnB,CAApB,CAAX;QACAF,OAAO,CAACC,GAAR,CAAYhB,QAAZ;MACH;IACJ,CAND;EAOH,CARQ,EAQN,EARM,CAAT;EASA,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,eAAf;MAAA,uBACI;QAAK,SAAS,EAAC,iCAAf;QAAA,UACKA,QAAQ,CAACkB,GAAT,CAAa,CAACC,OAAD,EAAkBC,KAAlB,KAAoC;UAC9CL,OAAO,CAACC,GAAR,CAAYG,OAAZ;UACA,oBACI;YAAiB,SAAS,EAAC,yCAA3B;YAAA,UACKA;UADL,GAAUC,KAAV;YAAA;YAAA;YAAA;UAAA,QADJ;QAKH,CAPA;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GAtCQrB,oB;UAEgBF,S;;;KAFhBE,oB;AAuCT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}