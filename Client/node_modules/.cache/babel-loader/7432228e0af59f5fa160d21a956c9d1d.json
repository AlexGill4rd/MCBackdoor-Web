{"ast":null,"code":"/* globals document, ImageData */\nconst parseFont = require('./lib/parse-font');\n\nexports.parseFont = parseFont;\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), {\n    width: width,\n    height: height\n  });\n};\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0:\n      return new ImageData();\n\n    case 1:\n      return new ImageData(array);\n\n    case 2:\n      return new ImageData(array, width);\n\n    default:\n      return new ImageData(array, width, height);\n  }\n};\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options);\n\n    function cleanup() {\n      image.onload = null;\n      image.onerror = null;\n    }\n\n    image.onload = function () {\n      cleanup();\n      resolve(image);\n    };\n\n    image.onerror = function () {\n      cleanup();\n      reject(new Error('Failed to load the image \"' + src + '\"'));\n    };\n\n    image.src = src;\n  });\n};","map":{"version":3,"names":["parseFont","require","exports","createCanvas","width","height","Object","assign","document","createElement","createImageData","array","arguments","length","ImageData","loadImage","src","options","Promise","resolve","reject","image","cleanup","onload","onerror","Error"],"sources":["E:/Sites/virusv4/Client/node_modules/canvas/browser.js"],"sourcesContent":["/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n"],"mappings":"AAAA;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEAC,OAAO,CAACF,SAAR,GAAoBA,SAApB;;AAEAE,OAAO,CAACC,YAAR,GAAuB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;EAC9C,OAAOC,MAAM,CAACC,MAAP,CAAcC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd,EAAgD;IAAEL,KAAK,EAAEA,KAAT;IAAgBC,MAAM,EAAEA;EAAxB,CAAhD,CAAP;AACD,CAFD;;AAIAH,OAAO,CAACQ,eAAR,GAA0B,UAAUC,KAAV,EAAiBP,KAAjB,EAAwBC,MAAxB,EAAgC;EACxD;EACA,QAAQO,SAAS,CAACC,MAAlB;IACE,KAAK,CAAL;MAAQ,OAAO,IAAIC,SAAJ,EAAP;;IACR,KAAK,CAAL;MAAQ,OAAO,IAAIA,SAAJ,CAAcH,KAAd,CAAP;;IACR,KAAK,CAAL;MAAQ,OAAO,IAAIG,SAAJ,CAAcH,KAAd,EAAqBP,KAArB,CAAP;;IACR;MAAS,OAAO,IAAIU,SAAJ,CAAcH,KAAd,EAAqBP,KAArB,EAA4BC,MAA5B,CAAP;EAJX;AAMD,CARD;;AAUAH,OAAO,CAACa,SAAR,GAAoB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;EAC1C,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5C,MAAMC,KAAK,GAAGf,MAAM,CAACC,MAAP,CAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,EAA6CQ,OAA7C,CAAd;;IAEA,SAASK,OAAT,GAAoB;MAClBD,KAAK,CAACE,MAAN,GAAe,IAAf;MACAF,KAAK,CAACG,OAAN,GAAgB,IAAhB;IACD;;IAEDH,KAAK,CAACE,MAAN,GAAe,YAAY;MAAED,OAAO;MAAIH,OAAO,CAACE,KAAD,CAAP;IAAgB,CAAxD;;IACAA,KAAK,CAACG,OAAN,GAAgB,YAAY;MAAEF,OAAO;MAAIF,MAAM,CAAC,IAAIK,KAAJ,CAAU,+BAA+BT,GAA/B,GAAqC,GAA/C,CAAD,CAAN;IAA6D,CAAtG;;IAEAK,KAAK,CAACL,GAAN,GAAYA,GAAZ;EACD,CAZM,CAAP;AAaD,CAdD"},"metadata":{},"sourceType":"script"}