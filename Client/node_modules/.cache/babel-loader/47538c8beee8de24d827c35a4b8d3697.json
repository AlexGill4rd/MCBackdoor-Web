{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\virus-v5-web\\\\CLient\\\\src\\\\pages\\\\servercontrollers\\\\playercontroller\\\\components\\\\PlayerList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { socket } from \"../../../../socket/socket\";\nimport Player from './Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayerList(props) {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  const [validSelected, setValidSelected] = useState(false);\n  useEffect(function loadPlayers() {\n    if (props.server.Address !== undefined) {\n      socket.emit(\"client:server-player-list\", props.server.Address);\n    }\n  }, [props.server]);\n  useEffect(function updatePlayers() {\n    socket.on(`server:mcserver-player-list`, data => {\n      JSON.parse(data).map(player => {\n        if (props.selectedPlayer !== null) {\n          if (player.Displayname === props.selectedPlayer.Displayname) {\n            setValidSelected(true);\n          }\n        }\n      });\n\n      if (!validSelected) {\n        props.onPlayerClick(null);\n      }\n\n      setPlayers(JSON.parse(data));\n    });\n  }, []);\n\n  if (players.length <= 0) {\n    return \"Geen spelers online!\";\n  } else {\n    return players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        player: player,\n        onPlayerClick: props.onPlayerClick,\n        selectedPlayer: props.selectedPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, player.UUID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this));\n  }\n}\n\n_s(PlayerList, \"g5k/SHYiyXie0ygeRv1BLiyhZO8=\");\n\n_c = PlayerList;\nexport default PlayerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["useEffect","useState","socket","Player","PlayerList","props","players","setPlayers","validSelected","setValidSelected","loadPlayers","server","Address","undefined","emit","updatePlayers","on","data","JSON","parse","map","player","selectedPlayer","Displayname","onPlayerClick","length","UUID"],"sources":["E:/Sites/virus-v5-web/CLient/src/pages/servercontrollers/playercontroller/components/PlayerList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { socket } from \"../../../../socket/socket\";\r\nimport Player from './Player';\r\n\r\nfunction PlayerList(props: {server: any, onPlayerClick: any, selectedPlayer: any;}){\r\n    const [players, setPlayers] = useState<any>([]);\r\n    const [validSelected, setValidSelected] = useState<boolean>(false);\r\n\r\n    useEffect(function loadPlayers(){\r\n        if (props.server.Address !== undefined){\r\n            socket.emit(\"client:server-player-list\", props.server.Address);\r\n        }\r\n    }, [props.server]);\r\n    useEffect(function updatePlayers(){\r\n        socket.on(`server:mcserver-player-list`, data => {\r\n            JSON.parse(data).map((player: { Displayname: any; }) => {\r\n                if (props.selectedPlayer !== null){\r\n                    if (player.Displayname === props.selectedPlayer.Displayname){\r\n                        setValidSelected(true);\r\n                    }\r\n                }\r\n            });\r\n            if (!validSelected){\r\n                props.onPlayerClick(null);\r\n            }\r\n            setPlayers(JSON.parse(data));\r\n        })\r\n    }, []);\r\n    if (players.length <= 0){\r\n        return (\"Geen spelers online!\")\r\n    }else{\r\n        return (\r\n            players.map((player: { UUID: any; Displayname: any; }) => \r\n                <div key={player.UUID}>\r\n                    {\r\n                    <Player \r\n                        player={player} \r\n                        onPlayerClick={props.onPlayerClick} \r\n                        selectedPlayer={props.selectedPlayer}\r\n                    />\r\n                    }\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default PlayerList;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAAmF;EAAA;;EAC/E,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAM,EAAN,CAAtC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAU,KAAV,CAAlD;EAEAD,SAAS,CAAC,SAASU,WAAT,GAAsB;IAC5B,IAAIL,KAAK,CAACM,MAAN,CAAaC,OAAb,KAAyBC,SAA7B,EAAuC;MACnCX,MAAM,CAACY,IAAP,CAAY,2BAAZ,EAAyCT,KAAK,CAACM,MAAN,CAAaC,OAAtD;IACH;EACJ,CAJQ,EAIN,CAACP,KAAK,CAACM,MAAP,CAJM,CAAT;EAKAX,SAAS,CAAC,SAASe,aAAT,GAAwB;IAC9Bb,MAAM,CAACc,EAAP,CAAW,6BAAX,EAAyCC,IAAI,IAAI;MAC7CC,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBG,GAAjB,CAAsBC,MAAD,IAAmC;QACpD,IAAIhB,KAAK,CAACiB,cAAN,KAAyB,IAA7B,EAAkC;UAC9B,IAAID,MAAM,CAACE,WAAP,KAAuBlB,KAAK,CAACiB,cAAN,CAAqBC,WAAhD,EAA4D;YACxDd,gBAAgB,CAAC,IAAD,CAAhB;UACH;QACJ;MACJ,CAND;;MAOA,IAAI,CAACD,aAAL,EAAmB;QACfH,KAAK,CAACmB,aAAN,CAAoB,IAApB;MACH;;MACDjB,UAAU,CAACW,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAV;IACH,CAZD;EAaH,CAdQ,EAcN,EAdM,CAAT;;EAeA,IAAIX,OAAO,CAACmB,MAAR,IAAkB,CAAtB,EAAwB;IACpB,OAAQ,sBAAR;EACH,CAFD,MAEK;IACD,OACInB,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACR;MAAA,uBAEI,QAAC,MAAD;QACI,MAAM,EAAEA,MADZ;QAEI,aAAa,EAAEhB,KAAK,CAACmB,aAFzB;QAGI,cAAc,EAAEnB,KAAK,CAACiB;MAH1B;QAAA;QAAA;QAAA;MAAA;IAFJ,GAAUD,MAAM,CAACK,IAAjB;MAAA;MAAA;MAAA;IAAA,QADJ,CADJ;EAaH;AACJ;;GAzCQtB,U;;KAAAA,U;AA0CT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}