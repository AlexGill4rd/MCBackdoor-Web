{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { validateDate } from '../internals/hooks/validation/useDateValidation';\nimport { useUtils, useNow } from '../internals/hooks/useUtils';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay !== null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n\n        const needMonthSwitch = Boolean(action.focusedDay) && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n\n    default:\n      throw new Error('missing support');\n  }\n};\nexport const useCalendarState = _ref2 => {\n  let {\n    date,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus = false,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate\n  } = _ref2;\n\n  var _ref;\n\n  const now = useNow();\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date || now,\n    currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate != null ? newDate : now;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  const isDateDisabled = React.useCallback(day => validateDate(utils, day, {\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate,\n    shouldDisableDate\n  }) !== null, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = React.useCallback(newFocusedDate => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n};","map":{"version":3,"names":["_extends","React","validateDate","useUtils","useNow","createCalendarStateReducer","reduceAnimations","disableSwitchToMonthOnDayFocus","utils","state","action","type","slideDirection","direction","currentMonth","newMonth","isMonthSwitchingAnimating","focusedDay","isSameDay","needMonthSwitch","Boolean","isSameMonth","startOfMonth","isAfterDay","Error","useCalendarState","date","defaultCalendarMonth","disableFuture","disablePast","maxDate","minDate","onMonthChange","shouldDisableDate","_ref","now","reducerFn","useRef","current","calendarState","dispatch","useReducer","handleChangeMonth","useCallback","payload","changeMonth","newDate","newDateRequested","isDateDisabled","day","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate"],"sources":["E:/Sites/virusv4/Client/node_modules/@mui/x-date-pickers/CalendarPicker/useCalendarState.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { validateDate } from '../internals/hooks/validation/useDateValidation';\nimport { useUtils, useNow } from '../internals/hooks/useUtils';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay !== null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n\n        const needMonthSwitch = Boolean(action.focusedDay) && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n\n    default:\n      throw new Error('missing support');\n  }\n};\nexport const useCalendarState = ({\n  date,\n  defaultCalendarMonth,\n  disableFuture,\n  disablePast,\n  disableSwitchToMonthOnDayFocus = false,\n  maxDate,\n  minDate,\n  onMonthChange,\n  reduceAnimations,\n  shouldDisableDate\n}) => {\n  var _ref;\n\n  const now = useNow();\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date || now,\n    currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate != null ? newDate : now;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  const isDateDisabled = React.useCallback(day => validateDate(utils, day, {\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate,\n    shouldDisableDate\n  }) !== null, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = React.useCallback(newFocusedDate => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}